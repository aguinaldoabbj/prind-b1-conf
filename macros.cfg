########################################
# Pause / Resume (Required by Mainsail)
########################################

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
  M117 Idle but paused, maintaining bed temp.
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  {% else %}
  TURN_OFF_HEATERS
  M84
  {% endif %}
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 3600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

# PAUSE
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL
  ALERT_TONE
  M117 Print paused!


# RESUME
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

# CANCEL
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

# PARK PAUSE CANCEL
[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

######################################################################
# Beeper
######################################################################

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[gcode_macro M300]
gcode:
    {% set S = params.S|default(1000)|int %} ; S sets the tone frequency
    {% set P = params.P|default(100)|int %} ; P sets the tone duration
    {% set L = 0.5 %} ; L varies the PWM on time, close to 0 or 1 the tone gets a bit quieter. 0.5 is a symmetric waveform
    {% if S <= 0 %} ; dont divide through zero
    {% set F = 1 %}
    {% set L = 0 %}
    {% elif S >= 10000 %} ;max frequency set to 10kHz
    {% set F = 0 %}
    {% else %}
    {% set F = 1/S %} ;convert frequency to seconds 
    {% endif %}
    SET_PIN PIN=BEEPER_pin VALUE={L} CYCLE_TIME={F} ;Play tone
    G4 P{P} ;tone duration
    SET_PIN PIN=BEEPER_pin VALUE=0
    # Sample
    # Use a default 1kHz tone if S is omitted.
    #{% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    #{% set P = params.P|default(100)|int %}
    #SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    #G4 P{P}
    #SET_PIN PIN=BEEPER_pin VALUE=0

[gcode_macro ALERT_TONE]
gcode:  
    M300 S3500 P500
    M300 S3250 P500
    M300 S3000 P500
    M300 S2750 P500
    M300 S2500 P500
    M300 S2250 P500
    M300 S2000 P500
    M300 S1750 P500

# Play a tone when printer starts
[delayed_gcode Start_Tone]
initial_duration: 1
gcode:
    M300 P97 S587
    M300 P63 S0
    M300 P76 S523
    M300 P90 S440
    M300 P62 S0

# For using with START_PRINT macro
[gcode_macro START_PRINT_TONE]
gcode:
    M300 P153 S659
    M300 P149 S659
    M300 P148 S0
    M300 P148 S659
    M300 P154 S0
    M300 P149 S523
    M300 P148 S659
    M300 P149 S0
    M300 P154 S784
    M300 P446 S0
    M300 P154 S392
    M300 P452 S0
    M300 P154 S523
    M300 P298 S0

# For using with END_PRINT macro
[gcode_macro END_PRINT_TONE]
gcode:
    M300 S1174 P125
    M300 S1174 P125
    M300 S2349 P125
    M300 S0 P125
    M300 S880 P187
    M300 S0 P187
    M300 S1661 P125
    M300 S1567 P125
    M300 S0 P125
    M300 S1396 P250
    M300 S1174 P125
    M300 S1396 P125
    M300 S1567 P125
    M300 S1046 P125
    M300 S1046 P125
    M300 S2349 P125
    M300 S0 P125
    M300 S880 P187
    M300 S0 P187
    M300 S1661 P125
    M300 S1567 P125
    M300 S0 P125
    M300 S1396 P250
    M300 S1174 P125
    M300 S1396 P125
    M300 S1567 P125
    M300 S493 P125
    M300 S493 P125
    M300 S2349 P125
    M300 S0 P125
    M300 S880 P187
    M300 S0 P187
    M300 S1661 P125
    M300 S1567 P125
    M300 S0 P125
    M300 S1396 P250
    M300 S1174 P125
    M300 S1396 P125
    M300 S1567 P125
    M300 S466 P125
    M300 S466 P125
    M300 S2349 P125
    M300 S0 P125
    M300 S880 P187
    M300 S0 P187
    M300 S1661 P125
    M300 S1567 P125
    M300 S0 P125
    M300 S1396 P250
    M300 S1174 P125
    M300 S1396 P125
    M300 S1567 P125

##############################
# Filament Load/Unload/Change
##############################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.
[gcode_macro M600]
gcode:
  {% set X = params.X|default(25)|float %}
  {% set Y = params.Y|default(25)|float %}
  {% set Z = params.Z|default(10)|float %}
      SAVE_GCODE_STATE NAME=M600_state
      PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-15 F1000
      RESTORE_GCODE_STATE NAME=M600_state

# Preheat for loading
[gcode_macro PREHEAT_LOAD]
gcode:
        M104 S200

# Cold load
[gcode_macro COOL_LOAD]
gcode:
        M104 S0

# Normal load
[gcode_macro LOAD_FILAMENT]
gcode:
        M117 Loading Filament...
        M83
        G1 E60 F1000
        G1 E100 F250
        G92 E0.0
        M400
        M117 Load Complete

# Slow Load
[gcode_macro LOAD_FILAMENT_SLOW]
gcode:
        M117 Loading Filament...
        M83
	# Break up to avoid extrude-too-long and timeouts due to how long it takes to extrude
        G1 E50 F250
        G1 E50 F250
        G1 E30 F100
        G1 E30 F100
        G92 E0.0
        M400
        M117 Load Complete

# Unload
[gcode_macro UNLOAD_FILAMENT]
gcode:
        M117 Unloading Filament...
        M83
        G1 E0.5 F1000
        G1 E-0.5 F1000
        G1 E1.0 F1000
        G1 E-1.0 F1000
        G1 E1.5 F1000
        G1 E-1.5 F1000
        G1 E2.0 F1000
        G1 E-120 F1000
        M117 Remove Filament Now!
        M400

# Purge some filamente
[gcode_macro PURGE]
gcode:
    M83
    G1 E50.0 F250
    G90
    M400

# Filament Runout 
[gcode_macro FILAMENT_RUNOUT]
gcode:
  ALERT_TONE
  M300 S1 P10
  M600
  M300 S1 P10

# Turn off Runout sensor
[gcode_macro RUNOUT_ON]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

# Turn on Runout sensor
[gcode_macro RUNOUT_OFF]
gcode:
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0


#############
# Preheating (not needed as fluidd has temperature presets
#############

# [gcode_macro PREHEAT_BED65]
# gcode:
#         M140 S65

# [gcode_macro PREHEAT_BED95]
# gcode:
#         M140 S95

# [gcode_macro PREHEAT_BED_LEVELING]
# gcode:
#         M140 S60
#         M104 S150 

######################################################################
# Custom BED_MESH_CALIBRATE
######################################################################

# [gcode_macro BED_MESH_CALIBRATE]
# rename_existing: BASE_BED_MESH_CALIBRATE
# gcode:
#     #before the original gcode
#     BED_MESH_CLEAR
#     QUAD_GANTRY_LEVEL
#     G1 X125 Y125 Z5 F6000
#     #the original gcode
#     BASE_BED_MESH_CALIBRATE
#     #after the original gcode

######################################################################
# Override M117 command with rawparams
######################################################################

# The macro below will override the default M117 command to echo the message.
#
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
#
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing `"`

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}


######################################################
# Cancel object (aka Marlin/RRF M486 commands) support
######################################################

# Enable object exclusion ([exclude_object] must be enabled)
[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}






